#include "polynomials.cuh"

__device__ void matrix5x5Determinant(double *matrix, double *result)
{
    // automatically generated by codegen_det5.py
    double *i00 = matrix + 0 * numCoefficients;
    double *i01 = matrix + 1 * numCoefficients;
    double *i02 = matrix + 2 * numCoefficients;
    double *i03 = matrix + 3 * numCoefficients;
    double *i04 = matrix + 4 * numCoefficients;
    double *i10 = matrix + 5 * numCoefficients;
    double *i11 = matrix + 6 * numCoefficients;
    double *i12 = matrix + 7 * numCoefficients;
    double *i13 = matrix + 8 * numCoefficients;
    double *i14 = matrix + 9 * numCoefficients;
    double *i20 = matrix + 10 * numCoefficients;
    double *i21 = matrix + 11 * numCoefficients;
    double *i22 = matrix + 12 * numCoefficients;
    double *i23 = matrix + 13 * numCoefficients;
    double *i24 = matrix + 14 * numCoefficients;
    double *i30 = matrix + 15 * numCoefficients;
    double *i31 = matrix + 16 * numCoefficients;
    double *i32 = matrix + 17 * numCoefficients;
    double *i33 = matrix + 18 * numCoefficients;
    double *i34 = matrix + 19 * numCoefficients;
    double *i40 = matrix + 20 * numCoefficients;
    double *i41 = matrix + 21 * numCoefficients;
    double *i42 = matrix + 22 * numCoefficients;
    double *i43 = matrix + 23 * numCoefficients;
    double *i44 = matrix + 24 * numCoefficients;

    double t0[16];
    for (int k = 0; k < 16; ++k)
        t0[k] = 0;
    double t1[17];
    for (int k = 0; k < 17; ++k)
        t1[k] = 0;
    double t2[17];
    for (int k = 0; k < 17; ++k)
        t2[k] = 0;
    double t3[17];
    for (int k = 0; k < 17; ++k)
        t3[k] = 0;
    double t4[9];
    for (int k = 0; k < 9; ++k)
        t4[k] = 0;
    double t5[9];
    for (int k = 0; k < 9; ++k)
        t5[k] = 0;
    double t6[16];
    for (int k = 0; k < 16; ++k)
        t6[k] = 0;
    double t7[10];
    for (int k = 0; k < 10; ++k)
        t7[k] = 0;
    double t8[10];
    for (int k = 0; k < 10; ++k)
        t8[k] = 0;
    double t9[10];
    for (int k = 0; k < 10; ++k)
        t9[k] = 0;
    double t10[16];
    for (int k = 0; k < 16; ++k)
        t10[k] = 0;
    double t11[16];
    for (int k = 0; k < 16; ++k)
        t11[k] = 0;
    double t12[11];
    for (int k = 0; k < 11; ++k)
        t12[k] = 0;
    double t13[11];
    for (int k = 0; k < 11; ++k)
        t13[k] = 0;
    double t14[11];
    for (int k = 0; k < 11; ++k)
        t14[k] = 0;
    double t15[16];
    for (int k = 0; k < 16; ++k)
        t15[k] = 0;
    double t16[16];
    for (int k = 0; k < 16; ++k)
        t16[k] = 0;
    double t17[26];
    for (int k = 0; k < 26; ++k)
        t17[k] = 0;
    double t18[26];
    for (int k = 0; k < 26; ++k)
        t18[k] = 0;
    upm(i00, i11, t1, 10, 8);
    upm(i01, i10, t2, 9, 9);
    ups(t1, t2, t3, 17);
    upm(i33, i44, t4, 4, 2);
    upm(i34, i43, t5, 3, 3);
    ups(t4, t5, t6, 5);
    upm(i22, t6, t7, 6, 5);
    upm(i32, i44, t8, 5, 2);
    upm(i34, i42, t9, 3, 4);
    ups(t8, t9, t10, 6);
    upm(i23, t10, t11, 5, 6);
    ups(t7, t11, t12, 10);
    upm(i32, i43, t13, 5, 3);
    upm(i33, i42, t14, 4, 4);
    ups(t13, t14, t15, 7);
    upm(i24, t15, t16, 4, 7);
    upa(t12, t16, t17, 10);
    upm(t3, t17, t18, 17, 10);
    upm(i00, i12, t0, 10, 7);
    upm(i02, i10, t1, 8, 9);
    ups(t0, t1, t2, 16);
    upm(i33, i44, t3, 4, 2);
    upm(i34, i43, t4, 3, 3);
    ups(t3, t4, t5, 5);
    upm(i21, t5, t6, 7, 5);
    upm(i31, i44, t7, 6, 2);
    upm(i34, i41, t8, 3, 5);
    ups(t7, t8, t9, 7);
    upm(i23, t9, t10, 5, 7);
    ups(t6, t10, t11, 11);
    upm(i31, i43, t12, 6, 3);
    upm(i33, i41, t13, 4, 5);
    ups(t12, t13, t14, 8);
    upm(i24, t14, t15, 4, 8);
    upa(t11, t15, t16, 11);
    upm(t2, t16, t17, 16, 11);
    ups(t18, t17, t18, 26);
    upm(i00, i13, t0, 10, 6);
    upm(i03, i10, t1, 7, 9);
    ups(t0, t1, t2, 15);
    upm(i32, i44, t3, 5, 2);
    upm(i34, i42, t4, 3, 4);
    ups(t3, t4, t5, 6);
    upm(i21, t5, t6, 7, 6);
    upm(i31, i44, t7, 6, 2);
    upm(i34, i41, t8, 3, 5);
    ups(t7, t8, t9, 7);
    upm(i22, t9, t10, 6, 7);
    ups(t6, t10, t11, 12);
    upm(i31, i42, t12, 6, 4);
    upm(i32, i41, t13, 5, 5);
    ups(t12, t13, t14, 9);
    upm(i24, t14, t15, 4, 9);
    upa(t11, t15, t16, 12);
    upm(t2, t16, t17, 15, 12);
    upa(t18, t17, t18, 26);
    upm(i00, i14, t0, 10, 5);
    upm(i04, i10, t1, 6, 9);
    ups(t0, t1, t2, 14);
    upm(i32, i43, t3, 5, 3);
    upm(i33, i42, t4, 4, 4);
    ups(t3, t4, t5, 7);
    upm(i21, t5, t6, 7, 7);
    upm(i31, i43, t7, 6, 3);
    upm(i33, i41, t8, 4, 5);
    ups(t7, t8, t9, 8);
    upm(i22, t9, t10, 6, 8);
    ups(t6, t10, t11, 13);
    upm(i31, i42, t12, 6, 4);
    upm(i32, i41, t13, 5, 5);
    ups(t12, t13, t14, 9);
    upm(i23, t14, t15, 5, 9);
    upa(t11, t15, t16, 13);
    upm(t2, t16, t17, 14, 13);
    ups(t18, t17, t18, 26);
    upm(i01, i12, t0, 9, 7);
    upm(i02, i11, t1, 8, 8);
    ups(t0, t1, t2, 15);
    upm(i33, i44, t3, 4, 2);
    upm(i34, i43, t4, 3, 3);
    ups(t3, t4, t5, 5);
    upm(i20, t5, t6, 8, 5);
    upm(i30, i44, t7, 7, 2);
    upm(i34, i40, t8, 3, 6);
    ups(t7, t8, t9, 8);
    upm(i23, t9, t10, 5, 8);
    ups(t6, t10, t11, 12);
    upm(i30, i43, t12, 7, 3);
    upm(i33, i40, t13, 4, 6);
    ups(t12, t13, t14, 9);
    upm(i24, t14, t15, 4, 9);
    upa(t11, t15, t16, 12);
    upm(t2, t16, t17, 15, 12);
    upa(t18, t17, t18, 26);
    upm(i01, i13, t0, 9, 6);
    upm(i03, i11, t1, 7, 8);
    ups(t0, t1, t2, 14);
    upm(i32, i44, t3, 5, 2);
    upm(i34, i42, t4, 3, 4);
    ups(t3, t4, t5, 6);
    upm(i20, t5, t6, 8, 6);
    upm(i30, i44, t7, 7, 2);
    upm(i34, i40, t8, 3, 6);
    ups(t7, t8, t9, 8);
    upm(i22, t9, t10, 6, 8);
    ups(t6, t10, t11, 13);
    upm(i30, i42, t12, 7, 4);
    upm(i32, i40, t13, 5, 6);
    ups(t12, t13, t14, 10);
    upm(i24, t14, t15, 4, 10);
    upa(t11, t15, t16, 13);
    upm(t2, t16, t17, 14, 13);
    ups(t18, t17, t18, 26);
    upm(i01, i14, t0, 9, 5);
    upm(i04, i11, t1, 6, 8);
    ups(t0, t1, t2, 13);
    upm(i32, i43, t3, 5, 3);
    upm(i33, i42, t4, 4, 4);
    ups(t3, t4, t5, 7);
    upm(i20, t5, t6, 8, 7);
    upm(i30, i43, t7, 7, 3);
    upm(i33, i40, t8, 4, 6);
    ups(t7, t8, t9, 9);
    upm(i22, t9, t10, 6, 9);
    ups(t6, t10, t11, 14);
    upm(i30, i42, t12, 7, 4);
    upm(i32, i40, t13, 5, 6);
    ups(t12, t13, t14, 10);
    upm(i23, t14, t15, 5, 10);
    upa(t11, t15, t16, 14);
    upm(t2, t16, t17, 13, 14);
    upa(t18, t17, t18, 26);
    upm(i02, i13, t0, 8, 6);
    upm(i03, i12, t1, 7, 7);
    ups(t0, t1, t2, 13);
    upm(i31, i44, t3, 6, 2);
    upm(i34, i41, t4, 3, 5);
    ups(t3, t4, t5, 7);
    upm(i20, t5, t6, 8, 7);
    upm(i30, i44, t7, 7, 2);
    upm(i34, i40, t8, 3, 6);
    ups(t7, t8, t9, 8);
    upm(i21, t9, t10, 7, 8);
    ups(t6, t10, t11, 14);
    upm(i30, i41, t12, 7, 5);
    upm(i31, i40, t13, 6, 6);
    ups(t12, t13, t14, 11);
    upm(i24, t14, t15, 4, 11);
    upa(t11, t15, t16, 14);
    upm(t2, t16, t17, 13, 14);
    upa(t18, t17, t18, 26);
    upm(i02, i14, t0, 8, 5);
    upm(i04, i12, t1, 6, 7);
    ups(t0, t1, t2, 12);
    upm(i31, i43, t3, 6, 3);
    upm(i33, i41, t4, 4, 5);
    ups(t3, t4, t5, 8);
    upm(i20, t5, t6, 8, 8);
    upm(i30, i43, t7, 7, 3);
    upm(i33, i40, t8, 4, 6);
    ups(t7, t8, t9, 9);
    upm(i21, t9, t10, 7, 9);
    ups(t6, t10, t11, 15);
    upm(i30, i41, t12, 7, 5);
    upm(i31, i40, t13, 6, 6);
    ups(t12, t13, t14, 11);
    upm(i23, t14, t15, 5, 11);
    upa(t11, t15, t16, 15);
    upm(t2, t16, t17, 12, 15);
    ups(t18, t17, t18, 26);
    upm(i03, i14, t0, 7, 5);
    upm(i04, i13, t1, 6, 6);
    ups(t0, t1, t2, 11);
    upm(i31, i42, t3, 6, 4);
    upm(i32, i41, t4, 5, 5);
    ups(t3, t4, t5, 9);
    upm(i20, t5, t6, 8, 9);
    upm(i30, i42, t7, 7, 4);
    upm(i32, i40, t8, 5, 6);
    ups(t7, t8, t9, 10);
    upm(i21, t9, t10, 7, 10);
    ups(t6, t10, t11, 16);
    upm(i30, i41, t12, 7, 5);
    upm(i31, i40, t13, 6, 6);
    ups(t12, t13, t14, 11);
    upm(i22, t14, t15, 6, 11);
    upa(t11, t15, t16, 16);
    upm(t2, t16, t17, 11, 16);
    upa(t18, t17, t18, 26);

    for (int i = 0; i < numCoefficients; ++i)
        result[i] = t18[i];
}